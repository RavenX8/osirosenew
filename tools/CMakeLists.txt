CMAKE_MINIMUM_REQUIRED(VERSION 2.8 FATAL_ERROR)
PROJECT(tools)

OPTION(BUILD_PROTOBUF 
  "Build Protobuf (Leave this off)" OFF)

IF (BUILD_PROTOBUF)
	LIST(APPEND CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake")
	SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/../lib)
	SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/../lib)
	SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/../bin)

	SET(CMAKE_BUILD_TYPE $ENV{BUILD_TYPE})

	IF (${CMAKE_CXX_COMPILER_ID} STREQUAL MSVC)
		SET(CMAKE_RULE_MESSAGES OFF)
		
		#build protobuf
		SET(protobuf_MSVC_STATIC_RUNTIME ON CACHE BOOL "" FORCE)
		ADD_SUBDIRECTORY(${CMAKE_SOURCE_DIR}/protobuf/cmake)
		
		#build lua
		SET(lua_MSVC_STATIC_RUNTIME ON CACHE BOOL "" FORCE)
		ADD_SUBDIRECTORY(${CMAKE_SOURCE_DIR}/lua)
		
		#build mysqlpp
		#SET(mysqlpp_MSVC_STATIC_RUNTIME ON CACHE BOOL "" FORCE)
		#SET(mysqlpp_STATIC_LIB ON CACHE BOOL "" FORCE)
		#ADD_SUBDIRECTORY(${CMAKE_SOURCE_DIR}/mysqlpp)
		
		SET(CMAKE_RULE_MESSAGES ON)
	ENDIF()

ELSE()

	INCLUDE_DIRECTORIES(
		SYSTEM ${SPDLOG_ROOT}
	)

	IF(ENABLE_TESTING AND ENABLE_TESTING_COVERAGE)
	    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -fprofile-arcs -ftest-coverage")
	ENDIF() # ENABLE_TESTING_COVERAGE

	IF( ENABLE_ASAN )
	        SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -fsanitize=address -fno-omit-frame-pointer")
        	SET(LINK_FLAGS "${LINK_FLAGS} -g -fsanitize=address")
	ENDIF()

	ADD_SUBDIRECTORY(stress)
ENDIF()
