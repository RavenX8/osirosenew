syntax = "proto2";
package configFile;

message	Database {
	required string	host 		= 1 [default = "localhost"];
	required string database 	= 2 [default = "osirose"];
	required string user 		= 3 [default = "root"];
	required string password 	= 4 [default = ""];
	required int32	port 		= 5 [default = 3306];
}

message	Server {
	required int32	id 			= 1 [default = 0];
	required string	ip 			= 2 [default = "127.0.0.1"];
	required string iscListenIP 	= 3 [default = "127.0.0.1"];
	required int32	accessLevel		= 4 [default = 1];
	required int32	parentId		= 5 [default = 0]; // Might not be used
	required int32	maxConnections		= 6 [default = 0]; // 0 = unlimited
	required bool	useThreads 		= 7 [default = true];
	required int32	maxThreads 		= 8 [default = 512];
	required int32	mode 			= 9 [default = 0]; // Fixed threading, dynamic threading
}

message LoginServer {
	required int32 clientPort 	= 1 [default = 29000];
	required int32 iscPort 		= 2 [default = 29010];
	required int32 accessLevel 	= 3 [default = 1];
	required int32 log_level	= 4 [default = 3]; // 0 -> 9; the lower the number the more details you get.
}

message CharServer {
	required string worldName 	= 1 [default = "osIROSE"];
	required string loginIP 	= 2 [default = "127.0.0.1"];
	required int32 loginIscPort 	= 3 [default = 29010];
	required int32 clientPort 	= 4 [default = 29100];
	required int32 iscPort 		= 5 [default = 29110];
	required int32 accessLevel 	= 6 [default = 1];
    required int32 log_level        = 7 [default = 3]; // 0 -> 9; the lower the number the more details you get.
}

message MapServer {
	required string channelName 	= 1 [default = "Athena"];
	required string charIP 		= 2 [default = "127.0.0.1"];
	required int32 charIscPort	= 3 [default = 29110];
	required int32 clientPort 	= 4 [default = 29200];
	required int32 iscPort 		= 5 [default = 29210];
	required int32 accessLevel 	= 6 [default = 1];
	required int32 mapid 		= 7 [default = 0];
    required int32 log_level        = 8 [default = 3]; // 0 -> 9; the lower the number the more details you get.
}

message	Configuration {
	required Database database 		= 1;
	required Server serverdata 		= 2;
	required LoginServer login_server 	= 3;
	required CharServer char_server 	= 4;
	required MapServer map_server 		= 5;
}
